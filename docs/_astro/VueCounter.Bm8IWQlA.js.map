{"version":3,"file":"VueCounter.Bm8IWQlA.js","sources":["../../src/components/vue/VueCounter.vue"],"sourcesContent":["<template>\r\n\t<!--\r\n\t\tSeeing type errors on the word `class`?\r\n\t\tThis unfortunately happens because @types/react's JSX definitions leak into every file due to being declared globally.\r\n\t\tThere's currently no way to prevent this when using both Vue and React with TypeScript in the same project.\r\n\t\tYou can read more about this issue here: https://github.com/johnsoncodehk/volar/discussions/592\r\n\t-->\r\n\t<div class=\"counter\">\r\n        <div>Vue</div>\r\n\t\t<button @click=\"subtract()\">-</button>\r\n\t\t<pre>{{ count }}</pre>\r\n\t\t<button @click=\"add()\">+</button>\r\n\t</div>\r\n\t<div class=\"counter-message\">\r\n\t\t<slot></slot>\r\n\t</div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref } from 'vue';\r\nconst count = ref(0);\r\nconst add = () => (count.value = count.value + 1);\r\nconst subtract = () => (count.value = count.value - 1);\r\n/* export default {\r\n\tsetup() {\r\n\r\n\t\treturn {\r\n\t\t\tcount,\r\n\t\t\tadd,\r\n\t\t\tsubtract,\r\n\t\t};\r\n\t},\r\n}; */\r\n</script>"],"names":["_createElementVNode","_renderSlot"],"mappings":";;;;;;;;;;;;;;AAoBA,IAAM,MAAA,KAAA,GAAQ,IAAI,CAAC,CAAA;AACnB,IAAA,MAAM,GAAM,GAAA,MAAO,KAAM,CAAA,KAAA,GAAQ,MAAM,KAAQ,GAAA,CAAA;AAC/C,IAAA,MAAM,QAAW,GAAA,MAAO,KAAM,CAAA,KAAA,GAAQ,MAAM,KAAQ,GAAA,CAAA;;;;;;AAf9C,MAAA,UAAA,GAAA,EAAA,KAAA,EAAM,SAAS,EAAA;AAMf,MAAA,UAAA,GAAA,EAAA,KAAA,EAAM,iBAAiB,EAAA;;;AAN5B,IAAAA,eAAA,CAKM,OALN,UAKM,EAAA;AAAA,MAJC,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAAA,eAAA,CAAc,aAAT,KAAG,EAAA,EAAA,CAAA,CAAA;AAAA,MACdA,eAAsC,CAAA,QAAA,EAAA;AAAA,QAA7B,OAAA,EAAK,sCAAE,MAAQ,CAAA,QAAA,EAAA;AAAA,OAAA,EAAI,GAAC,CAAA;AAAA,MAC7BA,eAAA,CAAsB,6BAAd,MAAK,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA;AAAA,MACbA,eAAiC,CAAA,QAAA,EAAA;AAAA,QAAxB,OAAA,EAAK,sCAAE,MAAG,CAAA,GAAA,EAAA;AAAA,OAAA,EAAI,GAAC;AAAA,KAAA,CAAA;AAEzB,IAAAA,eAAA,CAEM,OAFN,UAEM,EAAA;AAAA,MADLC,UAAa,CAAA,IAAA,CAAA,MAAA,EAAA,SAAA;AAAA,KAAA;;;;;;;"}